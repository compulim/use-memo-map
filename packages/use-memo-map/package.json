{
  "name": "use-memo-map",
  "version": "0.0.0-0",
  "description": "Memoizes calls to array map function similar to React.useMemo. Memoized results will survive next render.",
  "files": [
    "./dist/"
  ],
  "exports": {
    ".": {
      "import": {
        "types": "./dist/use-memo-map.d.mts",
        "default": "./dist/use-memo-map.mjs"
      },
      "require": {
        "types": "./dist/use-memo-map.d.ts",
        "default": "./dist/use-memo-map.js"
      }
    }
  },
  "main": "./dist/use-memo-map.js",
  "typings": "./dist/use-memo-map.d.ts",
  "scripts": {
    "build": "tsup",
    "bump": "npm run bump:prod && npm run bump:dev && npm run bump:auditfix",
    "bump:auditfix": "npm audit fix || exit 0",
    "bump:dev": "PACKAGES_TO_BUMP=$(cat package.json | jq -r '(.localPeerDependencies // {}) as $L | (.devDependencies // {}) | to_entries | map(select(.key as $K | $L | has($K) | not)) | map(.key + \"@latest\") | join(\" \")') && [ ! -z \"$PACKAGES_TO_BUMP\" ] && npm install $PACKAGES_TO_BUMP || true",
    "bump:prod": "PACKAGES_TO_BUMP=$(cat package.json | jq -r '(.localPeerDependencies // {}) as $L | (.dependencies // {}) | to_entries | map(select(.key as $K | $L | has($K) | not)) | map(.key + \"@latest\") | join(\" \")') && [ ! -z \"$PACKAGES_TO_BUMP\" ] && npm install $PACKAGES_TO_BUMP || true",
    "precommit": "npm run precommit:eslint && npm run precommit:typescript:production && npm run precommit:typescript:test",
    "precommit:eslint": "eslint ./src/",
    "precommit:typescript:production": "tsc --noEmit --project ./src/tsconfig.precommit.production.json",
    "precommit:typescript:test": "tsc --noEmit --project ./src/tsconfig.precommit.test.json",
    "prepack": "cp ../../CHANGELOG.md . && cp ../../LICENSE . && cp ../../README.md .",
    "switch": "cat package.json | jq --arg SWITCH_NAME $SWITCH_NAME -r '(.[\"switch:\" + $SWITCH_NAME] // {}) as $TEMPLATE | .devDependencies += ($TEMPLATE.devDependencies // {}) | .dependencies += ($TEMPLATE.dependencies // {})' | tee ./package.json.tmp && mv ./package.json.tmp ./package.json",
    "test": "jest"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/compulim/use-memo-map.git"
  },
  "keywords": [
    "react",
    "react-hook",
    "react-hooks",
    "use-memo"
  ],
  "author": "William Wong (https://github.com/compulim)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/compulim/use-memo-map/issues"
  },
  "homepage": "https://github.com/compulim/use-memo-map#readme",
  "switch:react-16": {
    "devDependencies": {
      "@testing-library/react": "^12",
      "@testing-library/react-hooks": "latest",
      "@types/react": "^16",
      "react": "16.8.0",
      "react-dom": "16.8.0"
    }
  },
  "switch:react-17": {
    "devDependencies": {
      "@testing-library/react": "^12",
      "@testing-library/react-hooks": "latest",
      "@types/react": "^17",
      "react": "17.0.0",
      "react-dom": "17.0.0"
    }
  },
  "switch:react-18": {
    "devDependencies": {
      "@types/react": "^18",
      "react": "18.0.0",
      "react-dom": "18.0.0"
    }
  },
  "devDependencies": {
    "@babel/preset-env": "^7.24.3",
    "@babel/preset-react": "^7.24.1",
    "@babel/preset-typescript": "^7.24.1",
    "@testing-library/react": "^14.2.2",
    "@tsconfig/recommended": "^1.0.4",
    "@tsconfig/strictest": "^2.0.4",
    "@types/jest": "^29.5.12",
    "@types/react": "^18.2.70",
    "escape-string-regexp": "^5.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "tsup": "^8.0.2",
    "typescript": "^5.4.3"
  },
  "peerDependencies": {
    "react": ">=16.8.0"
  },
  "dependencies": {
    "use-ref-from": "^0.1.0"
  }
}
